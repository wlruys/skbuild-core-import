# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main", "nocython" ]
  pull_request:
    branches: [ "main", "nocython" ]

permissions:
  contents: read

jobs:
  build_normal:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install scikit-build-core cython pyproject_metadata pathspec pytest
    - name: Create install
      run: |
        pip install . --verbose 
    - name: Print site-packages
      run: |
        python -c "import site; print(site.getsitepackages()[0])"
    - name: Test with pytest
      run: |
        python tests/run_example.py
        pytest tests

  build_editable:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install scikit-build-core cython pyproject_metadata pathspec pytest
    - name: Create editable install
      run: |
        pip install --no-build-isolation --config-settings=editable.rebuild=true -ve. 
    - name: Print site-packages
      run: |
        python -c "import site; print(site.getsitepackages()[0])"
    - name: Print site-packages
      run: |
        cat $(python -c "import site; print(site.getsitepackages()[0])")/_example_editable.py
    - name: Test with pytest
      run: |
        python tests/run_example.py
        pytest tests
